# mr-data-factory
ZT 抓据抓取与结构化

## 项目安装
该项目是springboot工程，使用到了lombok插件， 需要安装该插件。
如果eclipse，下载 lombok（https://projectlombok.org/downloads/lombok.jar），直接双击安装即可。
如果是IDE，编译器会提示安装，非常简单。
lombok安装完成后，导入mr-data-factory，编译通过即可。

## 运行demo
任务demo类：com.mr.modules.api.site.instance.DemoSiteTask
里面的任务逻辑：
    log.info("*******************call site task**************");
		Thread.sleep(30 * 1000);
		return null;

运行com.mr.RootApplication，等待启动完成后开始测试。
1、启动一个任务，发送http请求：http://localhost:8082/api/start/demo/1 ，
如果返回为：
{
    "code": "success"
}
表示运行启动成功。

2、查询任务执行状态：发送http请求：http://localhost:8082/api/is_finish/1
如果返回为：
{
    "finish": true
}
表示运行完成
如果返回为：
{
    "finish": false
}
表示运行未完成

3、查询返回结果,发送http请求：http://localhost:8082/api/result_code/1
如果返回为：
{
    "result_code": "success"
}
表示运行成功
如果返回为：
{
    "result_code": "executing"
}
表示运行中
如果返回为：
{
    "result_code": "failure"
}
表示运行失败

4、查询错误信息,发送http请求：http://localhost:8082/api/throwable_info/1
{
    "throwable_info": "task not exists..."
}
表示执行失败，并且错误提示为：task not exists...， 如果运行成功, 无错误提示，即：throwable_info：""

5、删除任务,发送http请求：http://localhost:8082/api/del/1
如果返回为：
{
    "del_result": true
}
表示删除成功

## 接口描述

indexId：任务名：如任务demo类：com.mr.modules.api.site.instance.DemoSiteTask 对应名为demo， 在SiteTaskDict中定义
callId：任务调用ID， 必须全局唯一，由客户端控制

1、 开启任务：/api/start/{indexId}/{callId} 


2、/result_code/{callId}





